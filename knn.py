# -*- coding: utf-8 -*-
"""KNN.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xpcATpAUgS4wBH4p_zC2jHdXLLUuI8Jk
"""

import numpy as np
from math import sqrt
from collections import Counter

class KNNclassifier():
    def __init__(self,k):
        self.k = k
        self._train_data = None
        self._train_label = None
    
    def fit(self,train_data,train_label):
        self._train_data = train_data
        self._train_label = train_label
        return self
    def _predict(self,x):
        distances = [sqrt(np.sum((_train_datas-x)**2)) for _train_datas in self._train_data]
        nearest = np.argsort(distances)
        topK_y = [self._train_label[i] for i in nearest[:self.k]]
        votes = Counter(topK_y)
        predict = votes.most_common(1)[0][0]
        return predict
    def predict(self,test_date):
        afe = [self._predict(x) for x in test_date]
        return np.array(afe)
    def __repr__(self):
        return "KNN  (k=%d) "%self.k



